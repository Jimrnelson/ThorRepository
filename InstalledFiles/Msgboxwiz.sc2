*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="msgboxwiz.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS __mboxwiz AS oform OF "msgboxwizclasslibrary.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="ddlbDefButton" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ddlbButtons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPreview" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbExclaim" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbQuestion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbNone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbDefines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbDoCase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbIF" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbStop" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ddlbReturn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Ospinner1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Olabel7" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: createrowsource
		*m: finish
		*m: getreturnid
		*m: msgformat
		*m: pmsgformat
		*p: cbuttons
		*p: cdefaultbutton
		*p: cifvalue
		*p: cmessage
		*p: crowsource
		*p: ctitle
		*p: idreturn
		*p: inreturn
		*p: ldefines
		*p: ldocase
		*p: lif
		*p: mbbuttons
		*p: mbdefbutton
		*p: mbicon
		*p: nbbuttons
		*p: nbdefbutton
		*p: nbicon
		*p: osettings
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	Caption = "Message Box Wizard"
	cbuttons = Ok
	cdefaultbutton = Ok
	cifvalue = 
	Closable = .T.
	cmessage = 
	ControlBox = .T.
	crowsource = Ok
	ctitle = 
	DoCreate = .T.
	Height = 263
	idreturn = ""
	inreturn = 0
	ldefines = .F.
	ldocase = .F.
	lif = .F.
	MaxButton = .F.
	MaxHeight = 263
	MaxLeft = 0
	MaxTop = 0
	MaxWidth = 370
	mbbuttons = ""
	mbdefbutton = ""
	mbicon = ""
	MinButton = .F.
	MinHeight = 263
	MinWidth = 370
	Name = "__MBOXWIZ"
	nbbuttons = 0
	nbdefbutton = 0
	nbicon = 0
	osettings = .NULL.
	ShowTips = .T.
	Width = 370
	WindowState = 0
	WindowType = 1
	_memberdata = <VFPData>
		<memberdata name="finish" display="Finish"/>
		<memberdata name="ctitle" display="cTitle"/>
		<memberdata name="cmessage" display="cMessage"/>
		<memberdata name="cbuttons" display="cButtons"/>
		<memberdata name="cdefaultbutton" display="cDefaultButton"/>
		<memberdata name="ldocase" display="lDoCase"/>
		<memberdata name="lif" display="lIF"/>
		<memberdata name="ldefines" display="lDefines"/>
		<memberdata name="cifvalue" display="cIFValue"/>
		<memberdata name="createrowsource" display="CreateRowSource"/>
		<memberdata name="crowsource" display="cRowSource"/>
		<memberdata name="getreturnid" display="GetReturnID"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'cbDefines' AS ocheckbox WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Use #DEFINE", ;
		ControlSource = "Thisform.lDefines", ;
		Left = 173, ;
		Name = "cbDefines", ;
		TabIndex = 8, ;
		ToolTipText = "#Define contants are found in FoxPro.h", ;
		Top = 188, ;
		Value = .F., ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbDoCase' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "DO CASE", ;
		ControlSource = "Thisform.lDoCase", ;
		Left = 173, ;
		Name = "cbDoCase", ;
		TabIndex = 5, ;
		Top = 138, ;
		Value = .F., ;
		Width = 71, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbExclaim' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Height = 40, ;
		Left = 316, ;
		Name = "cbExclaim", ;
		Picture = w95exclaim.ico, ;
		Style = 1, ;
		TabIndex = 10, ;
		ToolTipText = "Select for exclamation icon", ;
		Top = 55, ;
		Width = 40, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbIF' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "IF =  ", ;
		ControlSource = "Thisform.lIF", ;
		Left = 173, ;
		Name = "cbIF", ;
		TabIndex = 6, ;
		Top = 163, ;
		Value = .F., ;
		Width = 44, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbInfo' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Height = 40, ;
		Left = 316, ;
		Name = "cbInfo", ;
		Picture = w95info.ico, ;
		Style = 1, ;
		TabIndex = 9, ;
		ToolTipText = "Select for Information Icon", ;
		Top = 15, ;
		Width = 40, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbNone' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "None", ;
		Height = 40, ;
		Left = 316, ;
		Name = "cbNone", ;
		Style = 1, ;
		TabIndex = 13, ;
		ToolTipText = "Select for no icon to be displayed", ;
		Top = 175, ;
		Value = .T., ;
		Width = 40, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbQuestion' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Height = 40, ;
		Left = 316, ;
		Name = "cbQuestion", ;
		Picture = w95quest.ico, ;
		Style = 1, ;
		TabIndex = 11, ;
		ToolTipText = "Select for question mark icon", ;
		Top = 95, ;
		Width = 40, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cbStop' AS ocheckbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Height = 40, ;
		Left = 316, ;
		Name = "cbStop", ;
		Picture = w95stop.ico, ;
		Style = 1, ;
		TabIndex = 12, ;
		ToolTipText = "Select for stop icon", ;
		Top = 135, ;
		Width = 40, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS ocommandbutton WITH ;
		Caption = "Cancel", ;
		Left = 182, ;
		Name = "cmdCancel", ;
		TabIndex = 16, ;
		Top = 231, ;
		Width = 65, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOk' AS ocommandbutton WITH ;
		Caption = "Finish", ;
		Default = .T., ;
		Left = 93, ;
		Name = "cmdOk", ;
		TabIndex = 15, ;
		Top = 231, ;
		Width = 65, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPreview' AS ocommandbutton WITH ;
		Caption = "Preview", ;
		Left = 3, ;
		Name = "cmdPreview", ;
		TabIndex = 14, ;
		Top = 231, ;
		Width = 65, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'ddlbButtons' AS odropdownlist WITH ;
		ColumnCount = 1, ;
		ControlSource = "Thisform.cButtons", ;
		Height = 24, ;
		Left = 9, ;
		Name = "ddlbButtons", ;
		RowSource = "Ok,Ok / Cancel,Abort / Retry / Ignore,Yes / No / Cancel,Yes / No,Retry / Cancel", ;
		RowSourceType = 1, ;
		SelectOnEntry = .T., ;
		TabIndex = 3, ;
		ToolTipText = "Select buttons for message box", ;
		Top = 140, ;
		Value = Ok, ;
		Width = 140, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'ddlbDefButton' AS odropdownlist WITH ;
		ControlSource = "Thisform.cDefaultButton", ;
		Height = 24, ;
		Left = 9, ;
		Name = "ddlbDefButton", ;
		RowSource = "Ok", ;
		RowSourceType = 1, ;
		SelectOnEntry = .T., ;
		TabIndex = 4, ;
		ToolTipText = "Select Default Message Box Button", ;
		Top = 184, ;
		Value = Ok, ;
		Width = 95, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'ddlbReturn' AS odropdownlist WITH ;
		ControlSource = "Thisform.cIFValue", ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 214, ;
		Name = "ddlbReturn", ;
		RowSource = "Ok", ;
		RowSourceType = 1, ;
		SelectOnEntry = .T., ;
		TabIndex = 7, ;
		Top = 159, ;
		Width = 87
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'edtMessage' AS oeditbox WITH ;
		ControlSource = "Thisform.cMessage", ;
		Height = 56, ;
		Left = 9, ;
		Name = "edtMessage", ;
		TabIndex = 2, ;
		ToolTipText = "Enter text to be displayed in message box", ;
		Top = 64, ;
		Width = 291, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'Olabel1' AS olabel WITH ;
		Caption = "Dialog Box Buttons", ;
		Height = 17, ;
		Left = 9, ;
		Name = "Olabel1", ;
		TabIndex = 17, ;
		Top = 122, ;
		Width = 106, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Olabel2' AS olabel WITH ;
		Caption = "Title", ;
		Height = 17, ;
		Left = 9, ;
		Name = "Olabel2", ;
		TabIndex = 18, ;
		Top = 3, ;
		Width = 25, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Olabel3' AS olabel WITH ;
		Caption = "Message", ;
		Left = 9, ;
		Name = "Olabel3", ;
		TabIndex = 19, ;
		Top = 46, ;
		Width = 53, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Olabel4' AS olabel WITH ;
		Caption = "Default Button", ;
		Height = 17, ;
		Left = 9, ;
		Name = "Olabel4", ;
		TabIndex = 20, ;
		Top = 167, ;
		Width = 79, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Olabel5' AS olabel WITH ;
		BackStyle = 0, ;
		Caption = " Icon ", ;
		Height = 17, ;
		Left = 321, ;
		Name = "Olabel5", ;
		TabIndex = 21, ;
		Top = -1, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Olabel6' AS olabel WITH ;
		Caption = "constants", ;
		Left = 190, ;
		Name = "Olabel6", ;
		TabIndex = 22, ;
		Top = 202, ;
		Width = 56
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Olabel7' AS olabel WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Timeout(Secs)", ;
		Height = 17, ;
		Left = 277, ;
		Name = "Olabel7", ;
		TabIndex = 22, ;
		Top = 220, ;
		Width = 83
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="label" />

	ADD OBJECT 'Ospinner1' AS ospinner WITH ;
		InputMask = "99", ;
		KeyboardHighValue = 99, ;
		KeyboardLowValue = 1, ;
		Left = 277, ;
		Name = "Ospinner1", ;
		SpinnerHighValue = 99.00, ;
		SpinnerLowValue = 1.00, ;
		Top = 235
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="spinner" />

	ADD OBJECT 'txtTitle' AS otextbox WITH ;
		ControlSource = "Thisform.cTitle", ;
		Height = 23, ;
		Left = 9, ;
		Name = "txtTitle", ;
		TabIndex = 1, ;
		ToolTipText = "Enter Text to be displayed as Title of Message Box", ;
		Top = 21, ;
		Width = 291, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="msgboxwizclasslibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE createrowsource
		Do Case
			Case This.cButtons = 'Ok / Cancel'
				This.MBBUTTONS	= 'MB_OKCANCEL'
				This.NBBUTTONS	= 1
				This.cRowSource	= 'Ok,Cancel'
			Case This.cButtons = 'Ok'
				This.MBBUTTONS	= 'MB_OK'
				This.NBBUTTONS	= 0
				This.cRowSource	= 'Ok'
			Case This.cButtons = 'Abort / Retry / Ignore'
				This.MBBUTTONS	= 'MB_ABORTRETRYIGNORE'
				This.NBBUTTONS	= 2
				This.cRowSource	= 'Abort,Retry,Ignore'
			Case This.cButtons = 'Yes / No / Cancel'
				This.MBBUTTONS	= 'MB_YESNOCANCEL'
				This.NBBUTTONS	= 3
				This.cRowSource	= 'Yes,No,Cancel'
			Case This.cButtons = 'Yes / No'
				This.MBBUTTONS	= 'MB_YESNO'
				This.NBBUTTONS	= 4
				This.cRowSource	= 'Yes,No'
			Case This.cButtons = 'Retry / Cancel'
				This.MBBUTTONS	= 'MB_RETRYCANCEL'
				This.NBBUTTONS	= 5
				This.cRowSource	= 'Retry,Cancel'
			Otherwise
				This.MBBUTTONS	= 'MB_OK'
				This.NBBUTTONS	= 0
				This.cRowSource	= 'Ok'
		Endcase
		
	ENDPROC

	PROCEDURE Destroy
		Thisform.osettings.Save(ThisForm)
	ENDPROC

	PROCEDURE finish
		#Define CR      Chr(13)
		#Define LF      Chr(10)
		#Define INDENT1 '   '
		#Define INDENT2 '      '
		
		* timeout added for vfp7 by BAB
		Local lcComments, lcDialogType, lcMessageBox, lcMessageText, lcText, lcTimeout, lcTitleBar
		Local lcVariableName, lnCaseState, lnMDotsUsage
		
		lcMessageText = Alltrim (Thisform.EDTMESSAGE.Value)
		lcMessageText = '"' + Strtran (Strtran (lcMessageText, LF, ''), CR, '" + Chr(13) + "') + '"'
		
		If Thisform.CBDEFINES.Value = .T.
			lcDialogType = Thisform.MBBUTTONS  ;
				+ '+' + Thisform.MBDEFBUTTON   ;
				+ Iif ( Not Empty (Thisform.MBICON), '+' + Thisform.MBICON, '')
		Else
			lcDialogType = Transform (Thisform.NBBUTTONS + Thisform.NBDEFBUTTON + Thisform.NBICON)
		Endif
		
		lcTitleBar = '"' + Alltrim (Thisform.TXTTITLE.Value) + '"'
		
		lcTimeout = ''
		If Not Empty (Thisform.Ospinner1.Value)
			lcTimeout = ', ' + Alltrim (Str (Thisform.Ospinner1.Value * 1000))
		Endif
		
		lcMessageBox = 'MESSAGEBOX(' + lcMessageText + ', ' +  ;
			lcDialogType + ', ' + lcTitleBar + lcTimeout + ')'
		
		lnMDotsUsage = ExecScript(_Screen.cThorDispatcher, "Get Option=", 'MDots Usage', 'MDots')
		Do Case
			Case lnMDotsUsage = 2
				lcVariableName = 'm.lnMsgBoxAns'
			Case lnMDotsUsage = 3
				lcVariableName = 'M.lnMsgBoxAns'
			Otherwise
				lcVariableName = 'lnMsgBoxAns'
		Endcase
		
		Do Case
			Case Thisform.CBIF.Value
				lcCliptext =								   ;
					'IF ' + lcMessageBox + ' = ' +		   ;
					Trans (Thisform.GetReturnID()) + CR +  ;
					INDENT1 + '^^^' + CR +				   ;
					'ELSE' + CR +						   ;
					INDENT1 + CR +						   ;
					'ENDIF' + CR
			Case Thisform.CBDOCASE.Value
				lcText =  ;
					lcVariableName + ' = ' + lcMessageBox
				Do Case
					Case Thisform.DDLBDEFBUTTON.RowSource = 'Ok,Cancel'
						lnCaseState =																	  ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDOK' + CR + INDENT2 + '^^^' + CR +  ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDCANCEL' + CR + INDENT2
					Case Thisform.DDLBDEFBUTTON.RowSource = 'Ok'
						lnCaseState =  ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDOK' + CR + INDENT2 + '^^^'
					Case Thisform.DDLBDEFBUTTON.RowSource = 'Abort,Retry,Ignore'
						lnCaseState =																		;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDABORT' + CR + INDENT2 + '^^^' + CR +	;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDRETRY' + CR + INDENT2 + CR +			;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDIGNORE' + CR + INDENT2 + CR
					Case Thisform.DDLBDEFBUTTON.RowSource = 'Yes,No,Cancel'
						lnCaseState =																	   ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDYES' + CR + INDENT2 + '^^^' + CR +  ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDNO' + CR + INDENT2 + CR +		   ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDCANCEL' + CR  + INDENT2
					Case Thisform.DDLBDEFBUTTON.RowSource = 'Yes,No'
						lnCaseState =																	   ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDYES' + CR + INDENT2 + '^^^' + CR +  ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDNO' + CR + INDENT2
					Case Thisform.DDLBDEFBUTTON.RowSource = 'Retry,Cancel'
						lnCaseState =																		;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDRETRY' + CR + INDENT2 + '^^^' + CR +	;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDCANCEL' + CR + INDENT2
					Otherwise
						lnCaseState =  ;
							INDENT1 + 'CASE ' + lcVariableName + ' = IDOK' + CR + INDENT2 + '^^^'
				Endcase
				lcCliptext = lcText + CR + 'DO CASE' + CR + lnCaseState + CR + 'ENDCASE' + CR
			Otherwise
				lcCliptext = lcMessageBox
		Endcase
		
		If Not Thisform.CBDEFINES.Value
			lcComments = ' &' + '& '
			lcCliptext  = Strtran (lcCliptext, 'IDOK',     '1' + lcComments + 'OK')
			lcCliptext  = Strtran (lcCliptext, 'IDCANCEL', '2' + lcComments + 'Cancel')
			lcCliptext  = Strtran (lcCliptext, 'IDABORT',  '3' + lcComments + 'Abort')
			lcCliptext  = Strtran (lcCliptext, 'IDRETRY',  '4' + lcComments + 'Retry')
			lcCliptext  = Strtran (lcCliptext, 'IDIGNORE', '5' + lcComments + 'Ignore')
			lcCliptext  = Strtran (lcCliptext, 'IDYES',    '6' + lcComments + 'Yes')
			lcCliptext  = Strtran (lcCliptext, 'IDNO',     '7' + lcComments + 'No')
		EndIf
		
		* tools home page = http://vfpx.codeplex.com/wikipage?title=thor%20tools%20object
		loTools = ExecScript(_Screen.cThorDispatcher, "Class= tools from pemeditor")
		lcCliptext = loTools.BeautifyCode(lcCliptext)
		_cliptext = lcClipText
		
		Thisform.Visible = .F.
		Thisform.Release()
		Clear Events
	ENDPROC

	PROCEDURE getreturnid
		lcIFValue = Thisform.cIFValue
		ALines(laReturns, 'Ok, Cancel, Abort, Retry, Ignore, Yes, No', 5, ',')
		Return Ascan (laReturns, lcIFValue, 1, -1, -1, 1) 
	ENDPROC

	PROCEDURE Init
		This.MBBUTTONS	 = 'MB_OK'
		This.NBBUTTONS	 = 0
		This.MBDEFBUTTON = 'MB_DEFBUTTON1'
		This.NBDEFBUTTON = 0
		This.MBICON		 = 0
		This.NBICON		 = 0
		This.IDRETURN	 = 'IDOK'
		This.INRETURN	 = 1
		
		This.osettings = Execscript (_Screen.cThorDispatcher, 'class= ThorFormSettings', 'thor_tool_messagebox_wiz')
		This.osettings.Restore (Thisform)
		This.osettings.Restore (Thisform, 'cButtons, cDefaultButton, lDoCase, lIF, cIFValue, lDefines'	;
			  + ', MBButtons, MBDEFButton, MBIcon, NBButtons, NBDEFBUTTON, NBIcon')
		
		This.CreateRowSource()
		This.Refresh()
		
	ENDPROC

	PROCEDURE msgformat
		 LPARAMETER CMESSAGE
		 LOCAL NMSGWORDS
		 CMESSAGE = ALLTRIM(CMESSAGE)
		  NOTYET()
		 RETURN CMESSAGE
	ENDPROC

	PROCEDURE pmsgformat
		 LPARAMETER CMESSAGE
		 CMESSAGE = ALLTRIM(CMESSAGE)
		  NOTYET()
		 RETURN CMESSAGE
	ENDPROC

	PROCEDURE QueryUnload
		thisform.cmdCancel.Click()
	ENDPROC

	PROCEDURE cbDoCase.Refresh
		If Thisform.lIF
			This.Value = .F.
		Endif
		
	ENDPROC

	PROCEDURE cbDoCase.Valid
		Thisform.cbIF.Refresh()
		Thisform.ddlbReturn.Refresh()
		
	ENDPROC

	PROCEDURE cbExclaim.Click
		 THISFORM.MBICON = 'MB_ICONEXCLAMATION'
		 THISFORM.NBICON = 48
		 THISFORM.CBINFO.VALUE = .F.
		 THISFORM.CBSTOP.VALUE = .F.
		 THISFORM.CBQUESTION.VALUE = .F.
		 THISFORM.CBNONE.VALUE = .F.
		  THISFORM.REFRESHFORM()
	ENDPROC

	PROCEDURE cbIF.Refresh
		If Thisform.lDoCase
			This.Value = .F.
		EndIf
		
	ENDPROC

	PROCEDURE cbIF.Valid
		Thisform.cbDoCase.Refresh()
		Thisform.ddlbReturn.Refresh()
		
	ENDPROC

	PROCEDURE cbInfo.Click
		Thisform.MBICON			  = 'MB_ICONINFORMATION'
		Thisform.NBICON			  = 64
		Thisform.CBEXCLAIM.Value  = .F.
		Thisform.CBSTOP.Value	  = .F.
		Thisform.CBQUESTION.Value = .F.
		Thisform.CBNONE.Value	  = .F.
		Thisform.REFRESHFORM()
	ENDPROC

	PROCEDURE cbNone.Click
		Thisform.MBICON			  = 0
		Thisform.NBICON			  = 0
		Thisform.CBEXCLAIM.Value  = .F.
		Thisform.CBQUESTION.Value = .F.
		Thisform.CBINFO.Value	  = .F.
		Thisform.CBSTOP.Value	  = .F.
		Thisform.REFRESHFORM()
	ENDPROC

	PROCEDURE cbQuestion.Click
		 THISFORM.MBICON = 'MB_ICONQUESTION'
		 THISFORM.NBICON = 32
		 THISFORM.CBEXCLAIM.VALUE = .F.
		 THISFORM.CBSTOP.VALUE = .F.
		 THISFORM.CBINFO.VALUE = .F.
		 THISFORM.CBNONE.VALUE = .F.
		  THISFORM.REFRESHFORM()
	ENDPROC

	PROCEDURE cbStop.Click
		 THISFORM.MBICON = 'MB_ICONSTOP'
		 THISFORM.NBICON = 16
		 THISFORM.CBEXCLAIM.VALUE = .F.
		 THISFORM.CBQUESTION.VALUE = .F.
		 THISFORM.CBINFO.VALUE = .F.
		 THISFORM.CBNONE.VALUE = .F.
		  THISFORM.REFRESHFORM()
	ENDPROC

	PROCEDURE cmdCancel.Click
		 _CLIPTEXT = ''
		 THISFORM.VISIBLE = .F.
		  THISFORM.RELEASE()
		 CLEAR EVENTS 
	ENDPROC

	PROCEDURE cmdOk.Click
		Thisform.Finish()
		Return
		
		
		* timeout addes for vfp7 by BAB
		lcTimeout = "0"
		IF NOT EMPTY(ThisForm.Ospinner1.value) 
			lcTimeout = ALLTRIM(STR(ThisForm.Ospinner1.value*1000))
		ENDIF
		 DO CASE 
		 CASE THISFORM.CBIF.VALUE
		    DO CASE 
		    CASE THISFORM.CBDEFINES.VALUE = .T.
		       _CLIPTEXT =  ;
		            'IF MESSAGEBOX("' + ALLTRIM(THISFORM.EDTMESSAGE.VALUE) + '",' + THISFORM.MBBUTTONS +  ;
		      '+' + THISFORM.MBDEFBUTTON +  ;
		      IIF( .NOT. EMPTY(THISFORM.MBICON),'+' + THISFORM.MBICON,'') + ',"' + ALLTRIM(THISFORM.TXTTITLE.VALUE) +'"'+;
		      ',' +lcTimeout+') = ' + ALLTRIM(THISFORM.IDRETURN) + CHR(13) + 'ELSE' + CHR(13) + 'ENDIF'
		    CASE THISFORM.CBDEFINES.VALUE = .F.
		       LNSELECTION = THISFORM.NBBUTTONS + THISFORM.NBDEFBUTTON + THISFORM.NBICON
		       _CLIPTEXT =  ;
		            'IF MESSAGEBOX("' + ALLTRIM(THISFORM.EDTMESSAGE.VALUE) + '",' +  ;
		      ALLTRIM(STR(LNSELECTION)) + ',"' + ALLTRIM(THISFORM.TXTTITLE.VALUE) +'",'+;
		      	lcTimeout+') = ' + ;
		      ALLTRIM(STR(THISFORM.INRETURN)) + CHR(13) + 'ELSE' + CHR(13) + 'ENDIF'
		    OTHERWISE 
		    ENDCASE 
		 CASE THISFORM.CBDOCASE.VALUE
		    DO CASE 
		    CASE THISFORM.CBDEFINES.VALUE = .T.
		       LCTEXT =  ;
		            'lnMsgBoxAns = MESSAGEBOX("' + ALLTRIM(THISFORM.EDTMESSAGE.VALUE) + '",' +  ;
		      THISFORM.MBBUTTONS + '+' + THISFORM.MBDEFBUTTON +  ;
		      IIF( .NOT. EMPTY(THISFORM.MBICON),'+' + THISFORM.MBICON,'') + ',"' +  ;
		      ALLTRIM(THISFORM.TXTTITLE.VALUE) + '")'
		       DO CASE 
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Ok,Cancel'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDOK' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = IDCANCEL' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Ok'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDOK' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Abort,Retry,Ignore'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDABORT' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = IDRETRY' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = IDIGNORE' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Yes,No,Cancel'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDYES' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = IDNO' + CHR(13) + '   CASE lnMsgBoxAns = IDCANCEL' +  ;
		         CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Yes,No'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDYES' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = IDNO' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Retry,Cancel'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDRETRY' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = IDCANCEL' + CHR(13) + 'ENDCASE'
		       OTHERWISE 
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = IDOK' + CHR(13) + 'ENDCASE'
		       ENDCASE 
		    CASE THISFORM.CBDEFINES.VALUE = .F.
		       LNSELECTION = THISFORM.NBBUTTONS + THISFORM.NBDEFBUTTON + THISFORM.NBICON
		       LCTEXT =  ;
		            'lnMsgBoxAns = MESSAGEBOX("' + ALLTRIM(THISFORM.EDTMESSAGE.VALUE) + '",' +  ;
		      ALLTRIM(STR(LNSELECTION)) + ',"' + ALLTRIM(THISFORM.TXTTITLE.VALUE) +'"'+;
		       ',' +lcTimeout+') = '+  ;
		      ALLTRIM(STR(THISFORM.INRETURN))
		       DO CASE 
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Ok,Cancel'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 1' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = 2' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Ok'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 1' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Abort,Retry,Ignore'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 3' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = 4' + CHR(13) + '   CASE lnMsgBoxAns = 5' + CHR(13) +  ;
		         'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Yes,No,Cancel'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 6' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = 7' + CHR(13) + '   CASE lnMsgBoxAns = 2' + CHR(13) +  ;
		         'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Yes,No'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 6' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = 7' + CHR(13) + 'ENDCASE'
		       CASE THISFORM.DDLBDEFBUTTON.ROWSOURCE = 'Retry,Cancel'
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 4' + CHR(13) +  ;
		         '   CASE lnMsgBoxAns = 2' + CHR(13) + 'ENDCASE'
		       OTHERWISE 
		          LNCASESTATE =  ;
		               CHR(13) + 'DO CASE' + CHR(13) + '   CASE lnMsgBoxAns = 1' + CHR(13) + 'ENDCASE'
		       ENDCASE 
		    OTHERWISE 
		    ENDCASE 
		    _CLIPTEXT = LCTEXT + LNCASESTATE
		 OTHERWISE 
		    DO CASE 
		    CASE THISFORM.CBDEFINES.VALUE = .T.
		    
		    
		       _CLIPTEXT =  ;
		            'MESSAGEBOX("' + ALLTRIM(THISFORM.EDTMESSAGE.VALUE) + '",' + THISFORM.MBBUTTONS +  ;
		      '+' + THISFORM.MBDEFBUTTON +  ;
		      IIF( .NOT. EMPTY(THISFORM.MBICON),'+' + THISFORM.MBICON,'') + ',"' + ALLTRIM(THISFORM.TXTTITLE.VALUE) +'"'+;
		      	',' +lcTimeout+')'
		    CASE THISFORM.CBDEFINES.VALUE = .F.
		       LNSELECTION = THISFORM.NBBUTTONS + THISFORM.NBDEFBUTTON + THISFORM.NBICON
		       _CLIPTEXT =  ;
		            'MESSAGEBOX("' + ALLTRIM(THISFORM.EDTMESSAGE.VALUE) + '",' +  ;
		      ALLTRIM(STR(LNSELECTION)) + ',"' + ALLTRIM(THISFORM.TXTTITLE.VALUE) +'"'+;
		      	',' +lcTimeout+')'
		    OTHERWISE 
		    ENDCASE 
		 ENDCASE 
		 THISFORM.VISIBLE = .F.
		  THISFORM.RELEASE()
		 CLEAR EVENTS 
	ENDPROC

	PROCEDURE cmdPreview.Click
		 LNSELECTION = THISFORM.NBBUTTONS + THISFORM.NBDEFBUTTON + THISFORM.NBICON
		  MESSAGEBOX(ALLTRIM(THISFORM.EDTMESSAGE.VALUE),LNSELECTION,ALLTRIM(THISFORM.TXTTITLE.VALUE))
	ENDPROC

	PROCEDURE ddlbButtons.Valid
		With Thisform
			.CreateRowSource()
			.DDLBDEFBUTTON.Refresh()
			.ddlbReturn.Refresh()
		Endwith
		
		
		
	ENDPROC

	PROCEDURE ddlbDefButton.Refresh
		This.RowSource = Thisform.cRowSource
		If Not This.Value $ This.RowSource
			This.Value = Left (This.RowSource, At (',', This.RowSource + ',') - 1)
		Endif
	ENDPROC

	PROCEDURE ddlbDefButton.Valid
		Do Case
			Case This.ListIndex = 1
				Thisform.MBDEFBUTTON = 'MB_DEFBUTTON1'
				Thisform.NBDEFBUTTON = 0
			Case This.ListIndex = 2
				Thisform.MBDEFBUTTON = 'MB_DEFBUTTON2'
				Thisform.NBDEFBUTTON = 256
			Case This.ListIndex = 3
				Thisform.MBDEFBUTTON = 'MB_DEFBUTTON3'
				Thisform.NBDEFBUTTON = 512
		Endcase
		
	ENDPROC

	PROCEDURE ddlbReturn.Refresh
		This.RowSource = Thisform.cRowSource
		If Not This.Value $ This.RowSource
			This.Value = Left (This.RowSource, At (',', This.RowSource + ',') - 1)
		Endif
		
		This.Enabled = Thisform.lIF and not Thisform.lDoCase 
	ENDPROC

ENDDEFINE

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE
