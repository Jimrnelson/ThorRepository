*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_options_togglecommentcolors.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS togglecolors AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Baselabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.lblbackcolor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.cmdColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.edtSample" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container1.Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container2.lblbackcolor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container2.cmdColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container2.edtSample" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container2.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Container2.Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: rgbvalues
		*m: savecolors
		*p: cthortool
		*p: ndimbackcolor		&& *** Color
		*p: ndimforecolor		&& *** Color
		*p: nnormalbackcolor		&& *** Color
		*p: nnormalforecolor		&& *** Color
		*p: othor
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Anchor = 15
	cthortool = 
	Height = 260
	Name = "togglecolors"
	ndimbackcolor = 16777215		&& *** Color
	ndimforecolor = 12632256		&& *** Color
	nnormalbackcolor = 12632256		&& *** Color
	nnormalforecolor = 0		&& *** Color
	othor = .NULL.
	Width = 345
	_memberdata = <VFPData>
		<memberdata name="othor" display="oThor"/>
		<memberdata name="cthortool" display="cThorTool"/>
		<memberdata name="ndimbackcolor" display="nDimBackColor"/>
		<memberdata name="ndimforecolor" display="nDimForeColor"/>
		<memberdata name="nnormalbackcolor" display="nNormalBackColor"/>
		<memberdata name="nnormalforecolor" display="nNormalForeColor"/>
		<memberdata name="savecolors" display="SaveColors"/>
		<memberdata name="rgbvalues" display="RGBValues"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'Baselabel1' AS label WITH ;
		Alignment = 2, ;
		Caption = "Toggle Comment Colors", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Height = 18, ;
		Left = 5, ;
		Name = "Baselabel1", ;
		TabIndex = 7, ;
		Top = 6, ;
		Width = 335
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container1' AS container WITH ;
		Anchor = 10, ;
		Height = 101, ;
		Left = 6, ;
		Name = "Container1", ;
		Top = 37, ;
		Width = 332
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Container1.cmdColor' AS commandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 110, ;
		Name = "cmdColor", ;
		Picture = color2_16x16.bmp, ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 32, ;
		ZOrderSet = 11
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1.Command1' AS commandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 260, ;
		Name = "Command1", ;
		Picture = color2_16x16.bmp, ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 32, ;
		ZOrderSet = 11
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container1.edtSample' AS editbox WITH ;
		Anchor = 10, ;
		Enabled = .F., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 59, ;
		Left = 6, ;
		Name = "edtSample", ;
		ReadOnly = .T., ;
		Top = 37, ;
		Width = 319
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Container1.Label1' AS label WITH ;
		Alignment = 1, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Set BackColor:", ;
		Height = 17, ;
		Left = 157, ;
		Name = "Label1", ;
		Top = 14, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container1.lblbackcolor' AS label WITH ;
		Alignment = 1, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Set ForeColor:", ;
		Height = 17, ;
		Left = 13, ;
		Name = "lblbackcolor", ;
		Top = 14, ;
		Width = 89
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container2' AS container WITH ;
		Anchor = 10, ;
		Height = 101, ;
		Left = 6, ;
		Name = "Container2", ;
		Top = 151, ;
		Width = 332
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Container2.cmdColor' AS commandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 110, ;
		Name = "cmdColor", ;
		Picture = color2_16x16.bmp, ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 32, ;
		ZOrderSet = 11
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container2.Command1' AS commandbutton WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 260, ;
		Name = "Command1", ;
		Picture = color2_16x16.bmp, ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 32, ;
		ZOrderSet = 11
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Container2.edtSample' AS editbox WITH ;
		Anchor = 10, ;
		Enabled = .F., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 59, ;
		Left = 6, ;
		Name = "edtSample", ;
		ReadOnly = .T., ;
		Top = 37, ;
		Width = 319
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Container2.Label1' AS label WITH ;
		Alignment = 1, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Set BackColor:", ;
		Height = 17, ;
		Left = 157, ;
		Name = "Label1", ;
		Top = 14, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Container2.lblbackcolor' AS label WITH ;
		Alignment = 1, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Set ForeColor:", ;
		Height = 17, ;
		Left = 13, ;
		Name = "lblbackcolor", ;
		Top = 14, ;
		Width = 89
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "   Normal Comments   ", ;
		FontBold = .T., ;
		Height = 17, ;
		Left = 112, ;
		Name = "Label2", ;
		TabIndex = 7, ;
		Top = 30, ;
		Width = 126
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = "   Dimmed Comments   ", ;
		FontBold = .T., ;
		Height = 17, ;
		Left = 112, ;
		Name = "Label3", ;
		TabIndex = 7, ;
		Top = 144, ;
		Width = 132
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Init
		*	This.SetAll ('FontSize', This.Parent.GetOption ('FontSize'))
		Local lcBack, lcColors, lcCurrentColor, lcFore, lnPos
		
		lcCurrentColor = This.Parent.GetOption('Toggle Comment Colors', 'Toggle Comment Colors')
		
		If Empty(lcCurrentColor)
			lcCurrentColor = Execscript(_Screen.cThorDispatcher, 'Thor_Proc_GetRegistryOption.prg', 'EditorCommentColor')
			lcColors	   = Strextract(lcCurrentColor, '(', ')')
		
			If Not Empty(lcColors)
				lnPos				  = At(',', lcColors, 3)
				lcFore				  = Left(lcColors, lnPos - 1)
				lcBack				  = Substr(lcColors, lnPos + 1)
				This.nNormalForeColor = Rgb(&lcFore)
				This.nNormalBackColor = Rgb(&lcBack)
			Endif
		
		Else
		
			lcColors	   = Strextract(lcCurrentColor, '(', ')', 1)
		
			lnPos				  = At(',', lcColors, 3)
			lcFore				  = Left(lcColors, lnPos - 1)
			lcBack				  = Substr(lcColors, lnPos + 1)
			This.nNormalForeColor = Rgb(&lcFore)
			This.nNormalBackColor = Rgb(&lcBack)
		
			lcColors	   = Strextract(lcCurrentColor, '(', ')', 2)
		
			lnPos			   = At(',', lcColors, 3)
			lcFore			   = Left(lcColors, lnPos - 1)
			lcBack			   = Substr(lcColors, lnPos + 1)
			This.nDimForeColor = Rgb(&lcFore)
			This.nDimBackColor = Rgb(&lcBack)
		
		Endif
		
		This.Refresh()
		
	ENDPROC

	PROCEDURE rgbvalues
		Lparameters txValue
		Local lcValue, lnBlue, lnGreen, lnRed
		
		lnRed	= Bitand(txValue, 255)
		lnGreen	= Bitrshift(Bitand(txValue, 256 * 255), 8)
		lnBlue	= Bitrshift(Bitand(txValue, 256 * 256 * 255), 16)
		lcValue	= Transform(lnRed) + ',' + Transform(lnGreen) + ',' + Transform(lnBlue)
		
		Return lcValue
		
	ENDPROC

	PROCEDURE savecolors
		Local lcValue
		lcValue = '(' + This.RGBValues(This.nNormalForeColor) + ',' + This.RGBValues(This.nNormalBackColor) + ')' ;
			+ '(' + This.RGBValues(This.nNormalBackColor) + ',' + This.RGBValues(This.nDimBackColor) + ')'
		This.Parent.SetOption('Toggle Comment Colors', 'Toggle Comment Colors', lcValue, lcValue)
	ENDPROC

	PROCEDURE Container1.cmdColor.Click
		Local lnColor, lnNewColor
		
		lnColor	   = This.Parent.Parent.nNormalForeColor
		lnNewColor = Getcolor(lnColor)
		
		If lnNewColor < 0
			Return
		Endif lnNewColor < 0
		
		This.Parent.Parent.nNormalForeColor = lnNewColor
		This.Parent.edtSample.Refresh()
		This.Parent.Parent.SaveColors()
		
	ENDPROC

	PROCEDURE Container1.Command1.Click
		Local lnColor, lnNewColor
		
		lnColor	   = This.Parent.Parent.nNormalBackColor
		lnNewColor = Getcolor(lnColor)
		
		If lnNewColor < 0
			Return
		Endif lnNewColor < 0
		
		This.Parent.Parent.nNormalBackColor = lnNewColor
		This.Parent.edtSample.Refresh()
		This.Parent.Parent.SaveColors()
		
	ENDPROC

	PROCEDURE Container1.edtSample.Init
		Text to This.Value Noshow
		* Method:  SelectItem
		* Purpose: Selects the specified item in the ListView
		* Revised: 04/09/2011
		* Params:  tuItem - a node or a node key
		* Returns: none
		EndText
		
	ENDPROC

	PROCEDURE Container1.edtSample.Refresh
		This.DisabledBackColor = This.Parent.Parent.nNormalBackColor
		This.DisabledForeColor = This.Parent.Parent.nNormalForeColor
	ENDPROC

	PROCEDURE Container2.cmdColor.Click
		Local lnColor, lnNewColor
		
		lnColor	   = This.Parent.Parent.nDimForeColor
		lnNewColor = Getcolor(lnColor)
		
		If lnNewColor < 0
			Return
		Endif lnNewColor < 0
		
		This.Parent.Parent.nDimForeColor = lnNewColor
		This.Parent.edtSample.Refresh()
		This.Parent.Parent.SaveColors()
		
	ENDPROC

	PROCEDURE Container2.Command1.Click
		Local lnColor, lnNewColor
		
		lnColor	   = This.Parent.Parent.nDimBackColor
		lnNewColor = Getcolor(lnColor)
		
		If lnNewColor < 0
			Return
		Endif lnNewColor < 0
		
		This.Parent.Parent.nDimBackColor = lnNewColor
		This.Parent.edtSample.Refresh()
		This.Parent.Parent.SaveColors()
		
	ENDPROC

	PROCEDURE Container2.edtSample.Init
		Text to This.Value Noshow
		* Method:  SelectItem
		* Purpose: Selects the specified item in the ListView
		* Revised: 04/09/2011
		* Params:  tuItem - a node or a node key
		* Returns: none
		EndText
		
	ENDPROC

	PROCEDURE Container2.edtSample.Refresh
		This.DisabledBackColor = This.Parent.Parent.nDimBackColor
		This.DisabledForeColor = This.Parent.Parent.nDimForeColor
	ENDPROC

ENDDEFINE
