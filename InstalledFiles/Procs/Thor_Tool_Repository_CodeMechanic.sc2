*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_tool_repository_codemechanic.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 200
		Left = 865
		Name = "Dataenvironment"
		Top = 243
		Width = 520
	*</PropValue>

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkBeautify" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLocal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCheckall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUncheckall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdReverse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdbackup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBackup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkerasefxp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMDotOptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMDotOptions.optgrpMdot" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntMDotOptions.Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboFiletype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLegenda" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLegenda.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdLegenda.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column1.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column6.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.Column7.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.grcExt.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdCurfixmany.grcExt.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdStop" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkall
		*m: countchecked
		*m: createfilelist
		*m: createlistfromproject
		*m: getbackcolor
		*m: gotoreccord
		*m: logerror
		*m: pick
		*m: pickbackupdir
		*m: pickdir
		*m: pickfile
		*m: processdata
		*m: processfile
		*m: restoresettings
		*m: reversecheck
		*m: setcaption		&& controls the caption of form objects
		*m: shiftchecked
		*m: uncheckall
		*m: zapme
		*p: cbackupdir		&& Placeholder for backup-directory
		*p: cdirectory		&& Placeholder for selected directory
		*p: cfilename		&& placeholder for selected filename
		*p: cfiletype		&& placeholder for selected filetype
		*p: cnfiletype		&& placeholder for selectefiletype ID
		*p: cnsource		&& placeholder for selected source type ID
		*p: csource		&& placeholder for selected sourcetype
		*p: laddlocals
		*p: lbeautifyx
		*p: lerasefxp
		*p: lgetfileordir
		*p: lproject
		*p: nchecked
		*p: nerror
		*p: nfileordir		&& Placeholder for Boolean FileOrDir
		*p: nmdots		&& placeholder for option mDots selection
		*p: nreadonlyforecolor
		*p: nselectedbackcolor
		*p: nselectedforecolor
		*p: otools
		*p: runningmode		&& Wether the form is in runningmode ( set internally )
		*p: version
		*a: afilelist[50,3]
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		Caption = "Code Mechanic"
		cbackupdir = 
		cdirectory = 
		cfilename = 
		cfiletype = prg
		cnfiletype = 
		cnsource = 
		csource = 
		DoCreate = .T.
		Height = 432
		laddlocals = .F.
		lbeautifyx = .F.
		lerasefxp = .F.
		lgetfileordir = .F.
		lproject = .F.
		MinHeight = 229
		MinWidth = 900
		Name = "Form1"
		nchecked = 0
		nerror = 0
		nfileordir = 1
		nmdots = 1
		nreadonlyforecolor = (rgb(150,150,150))
		nselectedbackcolor = (rgb(200,255,200))
		nselectedforecolor = 0
		otools = .NULL.
		runningmode = .F.
		version = 01March2013-16:52 CET ->KP
		Width = 921
		_memberdata = <VFPData>
			<memberdata name="lbeautifyx" display="lBeautifyX"/>
			<memberdata name="laddlocals" display="lAddLocals"/>
			<memberdata name="nmdots" display="nMDots"/>
			<memberdata name="otools" display="oTools"/>
			<memberdata name="restoresettings" display="RestoreSettings"/>
			<memberdata name="zapme" display="ZapMe"/>
			<memberdata name="getbackcolor" display="GetBackcolor"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cboFiletype' AS combobox WITH ;
		Anchor = 3, ;
		BoundColumn = 3, ;
		ColumnCount = 3, ;
		ColumnWidths = "111,0,0", ;
		ControlSource = "thisform.cNFileType", ;
		DisabledBackColor = 196,196,196, ;
		FirstElement = 1, ;
		FontName = "Calibri", ;
		Height = 27, ;
		Left = 69, ;
		Name = "cboFiletype", ;
		NumberOfElements = 0, ;
		RowSource = "Program,prg,1,Visual form,scx,2,Class library,vcx,3,Project,pjx,4", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 1, ;
		Top = 11, ;
		Width = 134
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cboSource' AS combobox WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		ColumnLines = .F., ;
		ColumnWidths = "80,0", ;
		ControlSource = "thisform.cnsource", ;
		DisabledBackColor = 196,196,196, ;
		FirstElement = 1, ;
		FontName = "Calibri", ;
		Height = 27, ;
		Left = 336, ;
		Name = "cboSource", ;
		NumberOfElements = 0, ;
		RowSource = "MRU,1,Directory,2,File picker,3", ;
		RowSourceType = 1, ;
		Style = 2, ;
		TabIndex = 2, ;
		Top = 11, ;
		Width = 86
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'chkBeautify' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 3, ;
		BackStyle = 0, ;
		Caption = "Beautify\<X", ;
		ControlSource = "Thisform.lBeautifyX", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 16, ;
		Left = 111, ;
		Name = "chkBeautify", ;
		TabIndex = 4, ;
		Top = 50, ;
		Width = 76
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkerasefxp' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 3, ;
		BackStyle = 0, ;
		Caption = "\<Erase .fxp", ;
		ControlSource = "thisform.lerasefxp", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 16, ;
		Left = 657, ;
		Name = "chkerasefxp", ;
		TabIndex = 7, ;
		Top = 50, ;
		Width = 76
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'chkLocal' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 3, ;
		BackStyle = 0, ;
		Caption = "Add \<Local", ;
		ControlSource = "Thisform.lAddLocals", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 16, ;
		Left = 202, ;
		Name = "chkLocal", ;
		TabIndex = 5, ;
		Top = 50, ;
		Width = 76
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdbackup' AS commandbutton WITH ;
		Anchor = 3, ;
		Caption = "Bac\<kup Directory", ;
		FontName = "Calibri", ;
		FontSize = 9, ;
		Height = 24, ;
		Left = 484, ;
		Name = "cmdbackup", ;
		TabIndex = 3, ;
		Top = 14, ;
		Width = 101
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdCheckall' AS commandbutton WITH ;
		Anchor = 9, ;
		Caption = "Select \<all", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 25, ;
		Left = 793, ;
		Name = "cmdCheckall", ;
		TabIndex = 10, ;
		Top = 110, ;
		Width = 113
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdReverse' AS commandbutton WITH ;
		Anchor = 9, ;
		Caption = "\<Reverse selection", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 25, ;
		Left = 793, ;
		Name = "cmdReverse", ;
		TabIndex = 12, ;
		Top = 165, ;
		Width = 113
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRun' AS commandbutton WITH ;
		Anchor = 9, ;
		BackColor = 0,255,0, ;
		Caption = "\<Go", ;
		DisabledBackColor = 113,255,113, ;
		FontName = "Calibri", ;
		Height = 25, ;
		Left = 795, ;
		Name = "cmdRun", ;
		TabIndex = 9, ;
		Top = 195, ;
		Width = 39
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSelect' AS commandbutton WITH ;
		Anchor = 9, ;
		Caption = "\<Select", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 25, ;
		Left = 793, ;
		Name = "cmdSelect", ;
		TabIndex = 8, ;
		Top = 81, ;
		Width = 113
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdStop' AS commandbutton WITH ;
		Anchor = 9, ;
		BackColor = 255,0,0, ;
		Caption = "\<Stop", ;
		DisabledBackColor = 255,149,149, ;
		Enabled = .F., ;
		Height = 27, ;
		Left = 867, ;
		Name = "cmdStop", ;
		Top = 195, ;
		Width = 39
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdUncheckall' AS commandbutton WITH ;
		Anchor = 9, ;
		Caption = "\<Unselect all", ;
		DisabledBackColor = 196,196,196, ;
		FontName = "Calibri", ;
		Height = 25, ;
		Left = 793, ;
		Name = "cmdUncheckall", ;
		TabIndex = 11, ;
		Top = 137, ;
		Width = 113
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cntMDotOptions' AS container WITH ;
		Anchor = 3, ;
		BackStyle = 0, ;
		BorderColor = 171,173,179, ;
		Height = 34, ;
		Left = 312, ;
		Name = "cntMDotOptions", ;
		TabIndex = 6, ;
		Top = 43, ;
		Width = 302
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'cntMDotOptions.Label4' AS label WITH ;
		AutoSize = .T., ;
		Caption = "MDots:", ;
		FontName = "Calibri", ;
		Height = 16, ;
		Left = 11, ;
		Name = "Label4", ;
		Top = 8, ;
		Width = 40
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'cntMDotOptions.optgrpMdot' AS optiongroup WITH ;
		Anchor = 9, ;
		BackStyle = 0, ;
		ButtonCount = 2, ;
		ControlSource = "Thisform.nMDots", ;
		Height = 27, ;
		Left = 61, ;
		Name = "optgrpMdot", ;
		Top = 4, ;
		Value = 1, ;
		Width = 187, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "\<No change", ;
		Option1.FontName = "Calibri", ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "optMdot1", ;
		Option1.Style = 0, ;
		Option1.Top = 3, ;
		Option1.Value = 1, ;
		Option1.Width = 75, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Add \<m.Dot", ;
		Option2.FontName = "Calibri", ;
		Option2.Height = 16, ;
		Option2.Left = 93, ;
		Option2.Name = "optMdot2", ;
		Option2.Style = 0, ;
		Option2.Top = 3, ;
		Option2.Width = 74
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'grdCurfixmany' AS grid WITH ;
		AllowAutoColumnFit = 1, ;
		AllowCellSelection = .F., ;
		Anchor = 15, ;
		ColumnCount = 8, ;
		DeleteMark = .F., ;
		FontName = "Calibri", ;
		GridLineColor = 192,192,192, ;
		Height = 335, ;
		Left = 12, ;
		Name = "grdCurfixmany", ;
		Panel = 1, ;
		RecordSource = "curfixmany", ;
		RecordSourceType = 1, ;
		ScrollBars = 2, ;
		TabIndex = 17, ;
		Top = 84, ;
		Width = 760, ;
		Column1.Alignment = 2, ;
		Column1.ControlSource = "curfixmany.checked", ;
		Column1.FontName = "Calibri", ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .F., ;
		Column1.Sparse = .F., ;
		Column1.Width = 21, ;
		Column2.ControlSource = "curfixmany.filename", ;
		Column2.FontName = "Calibri", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .F., ;
		Column2.Width = 239, ;
		Column3.ColumnOrder = 4, ;
		Column3.ControlSource = "curfixmany.filepath", ;
		Column3.FontName = "Calibri", ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .F., ;
		Column3.Width = 290, ;
		Column4.ColumnOrder = 5, ;
		Column4.ControlSource = "curfixmany.dt", ;
		Column4.FontName = "Calibri", ;
		Column4.Format = "YS", ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .F., ;
		Column4.Width = 67, ;
		Column5.ColumnOrder = 6, ;
		Column5.ControlSource = "curfixmany.filesize", ;
		Column5.FontName = "Calibri", ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .F., ;
		Column5.Width = 69, ;
		Column6.ColumnOrder = 7, ;
		Column6.ControlSource = "curfixmany.processed", ;
		Column6.FontName = "Calibri", ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .F., ;
		Column6.Width = 28, ;
		Column7.ColumnOrder = 8, ;
		Column7.ControlSource = "curfixmany.skipped", ;
		Column7.FontName = "Calibri", ;
		Column7.Name = "Column7", ;
		Column7.ReadOnly = .F., ;
		Column8.ColumnOrder = 3, ;
		Column8.ControlSource = "curfixmany.ext", ;
		Column8.FontName = "Calibri", ;
		Column8.Name = "grcExt", ;
		Column8.Visible = .T., ;
		Column8.Width = 38
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'grdCurfixmany.Column1.Check1' AS checkbox WITH ;
		Alignment = 2, ;
		Caption = "", ;
		Centered = .T., ;
		FontName = "Calibri", ;
		Height = 17, ;
		Left = 40, ;
		Name = "Check1", ;
		ReadOnly = .F., ;
		Top = 21, ;
		Width = 60
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'grdCurfixmany.Column1.Header1' AS header WITH ;
		Caption = "", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.Column2.Header1' AS header WITH ;
		Caption = "File name", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Calibri", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdCurfixmany.Column3.Header1' AS header WITH ;
		Caption = "Path", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Calibri", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdCurfixmany.Column4.Header1' AS header WITH ;
		Caption = "Date", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Calibri", ;
		ForeColor = 0,0,0, ;
		Format = "", ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdCurfixmany.Column5.Header1' AS header WITH ;
		Caption = "Size", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Calibri", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdCurfixmany.Column6.Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "Check1", ;
		FontName = "Calibri", ;
		Height = 10, ;
		Left = 20, ;
		Name = "Check1", ;
		ReadOnly = .F., ;
		Top = 38, ;
		Width = 10
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'grdCurfixmany.Column6.Header1' AS header WITH ;
		Caption = "Proc", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.Column7.Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "Check1", ;
		FontName = "Calibri", ;
		Height = 10, ;
		Left = 32, ;
		Name = "Check1", ;
		ReadOnly = .F., ;
		Top = 21, ;
		Width = 10
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'grdCurfixmany.Column7.Header1' AS header WITH ;
		Caption = "Skip", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.grcExt.Header1' AS header WITH ;
		Caption = "Ext.", ;
		FontName = "Calibri", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdCurfixmany.grcExt.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Calibri", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdLegenda' AS grid WITH ;
		Anchor = 24, ;
		ColumnCount = 1, ;
		DeleteMark = .F., ;
		FontName = "Calibri", ;
		FontSize = 7, ;
		GridLineColor = 255,255,255, ;
		HeaderHeight = 15, ;
		Height = 183, ;
		Left = 797, ;
		Name = "grdLegenda", ;
		RecordMark = .F., ;
		RecordSource = "curLegenda", ;
		RowHeight = 15, ;
		TabIndex = 16, ;
		Top = 236, ;
		Visible = .F., ;
		Width = 105, ;
		Column1.ControlSource = "curLegenda.cContent", ;
		Column1.FontName = "Calibri", ;
		Column1.FontSize = 7, ;
		Column1.Name = "Column1", ;
		Column1.Visible = .F., ;
		Column1.Width = 100
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'grdLegenda.Column1.Header1' AS header WITH ;
		Caption = "Legenda", ;
		FontName = "Calibri", ;
		FontSize = 7, ;
		Name = "Header1", ;
		ToolTipText = "Colors indicate the status of the individual processed files in the main grid"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdLegenda.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Calibri", ;
		FontSize = 7, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .F.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'label1' AS label WITH ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "\<Search", ;
		FontName = "Calibri", ;
		Height = 17, ;
		Left = 256, ;
		Name = "label1", ;
		TabIndex = 15, ;
		Top = 18, ;
		Width = 66
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'label2' AS label WITH ;
		Anchor = 3, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "S\<cope", ;
		FontName = "Calibri", ;
		Height = 17, ;
		Left = 16, ;
		Name = "label2", ;
		TabIndex = 13, ;
		Top = 18, ;
		Width = 47
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		Anchor = 3, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Tools to apply:", ;
		FontName = "Calibri", ;
		Height = 16, ;
		Left = 16, ;
		Name = "Label3", ;
		TabIndex = 18, ;
		Top = 51, ;
		Width = 82
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'txtBackup' AS textbox WITH ;
		ControlSource = "thisform.cbackupdir", ;
		FontName = "Calibri", ;
		Height = 27, ;
		Left = 595, ;
		Name = "txtBackup", ;
		TabIndex = 14, ;
		Top = 11, ;
		Width = 292
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Activate
		Local loList As Object, ;
		   loTools As Object
		Try
		   loTools = Execscript (_Screen.cThorDispatcher, [Class= tools from pemeditor])
		   loList = loTools.GetMRUList([PRG])
		Catch
		   If Messagebox([Do you want to activate Thor?], 4 + 32, [This tool requires that Thor is active!]) = 6
		      Try
		         Do runthor
		      Catch
		         Messagebox([Make sure to install Thor], 0 + 48, [Could not start Thor!], 10)
		         ThisForm.Release()
		      Endtry
		   Else
		      ThisForm.Release()
		   Endif
		Endtry
		
	ENDPROC

	PROCEDURE checkall
		Local lnRecord As Number
		
		lnRecord = Recno([curFixMany])
		Update curFixMany Set checked = .T. Where .T.
		ThisForm.countchecked()
		*******************************************************************
		* Modified by MK 25-2-2013 17:13:03
		* Reason  to avoid error if no reccord available
		*******************************************************************
		ThisForm.gotoreccord( m.lnRecord )
		ThisForm.grdcurFixMany.SetFocus()
	ENDPROC

	PROCEDURE countchecked
		Local laDummy[1], ;
		   lnRecord As Number
		lnRecord = Recno([curFixMany])
		Select Count(*) From curFixMany Where checked Into Array laDummy
		ThisForm.nChecked = laDummy
		ThisForm.cmdrun.Refresh()
		******************************************************************
		* Changement by : KP - 05 March 2012/23:54:54
		* Reason .......: check for 0 reccords
		******************************************************************
		If Reccount() > 0
			Goto m.lnRecord In curFixMany
		endif
	ENDPROC

	PROCEDURE createfilelist
		Lparameters lcSourcetype
		Local lcFile As String, ;
		lcFilename As String, ;
		lnX As Number, ;
		loList As Object, ;
		loTools As Object
		
		*Program,prg,1,Visual form,scx,2,Class library,vcx,3,Project,pjx,4
		Local laDummy[1]
		Do Case
			Case ThisForm.cNfiletype ='1'
				ThisForm.cfiletype='PRG'
			Case ThisForm.cNfiletype ='2'
				ThisForm.cfiletype='SCX'
			Case ThisForm.cNfiletype ='3'
				ThisForm.cfiletype='MRU2'  &&  JN 23.2.2013:  VCX handles classes MRU2 classlibs. - and only those maintained by Thor PEM
			Otherwise
		******************************************************************
		* Changement by : KP - 01 March 2012/23:17:29
		* Reason .......: typo
		******************************************************************
		*ThisForm.cfiletype='prj'
				ThisForm.cfiletype='PJX'
		ENDCASE
		
		Do Case
		
		Case !ThisForm.lgetfileordir And lcSourcetype = [Filetype]
			loTools = Execscript (_Screen.cThorDispatcher, [Class= tools from pemeditor])
			loList = loTools.GetMRUList(ThisForm.cfiletype)
			If loList.Count > 0
				Select curfixmany
				This.ZapMe()
				For Each lcFile In loList
					lcFilename = lcFile
					If Adir(laDummy, lcFilename) = 1
						Insert Into curfixmany (filename, filepath, dt, filesize, ronly, checked, ext) Values (;
							Juststem(lcFilename), ;
							Justpath(lcFilename), ;
							Ctot(Dtoc(laDummy(1, 3)) + [ ] + laDummy(1, 4)), ;
							laDummy(1, 2),;
							'R'$laDummy(1,5),;
							Iif('R'$laDummy(1,5),Null,.F.),;
							LOWER(Justext(lcFilename)))
					Endif
				Endfor
				Go Top In curFixMany
			Endif
		
		*!*	* Changement by : KP - 10 March 2012/21:38:28
		*!*	* Reason .......:creation of MRU list with aid of ThisForm.createMRU
		*!*	* ...............(because I can't get loTools.GetMRUList to work :( ). In case
		*!*	* ...............the GetMRUList gets correctly working my code can be deleted
		*!*	* ...............and the original code - now commented - activated
		*!*	*****************************************************************************
		
		*!*		* Case !ThisForm.lGetFileOrDir and lcSourcetype= [Filetype]
		*!*		
		*!*		* Changement by : KP - 22 Febr 2013/23:11:00
		*!*		* Reason cboSource.Valid now changed into 'MRU' as default
		*!*		* as per bug found by JN 
		*!*		Case !ThisForm.lgetfileordir And INLIST(m.lcSourcetype, [Filetype], [MRU]) 
		*!*		
		*!*			m.loTools = Execscript (_Screen.cThorDispatcher, [Class= tools from pemeditor])
		*!*			If ThisForm.cboSource.DisplayValue = "MRU"
		*!*				ThisForm.createMRU
		*!*				Select curMRU
		*!*				If Reccount() > 0
		*!*					Select curFixMany
		*!*					This.ZapMe()
		*!*					Select curMRU  && Cursor curMRU ( cFullItem c(100))
		*!*					Scan
		*!*						m.lcSkeleton = Addbs(Justpath(curMRU.cFullItem))+"*."+Justext(curMRU.cFullItem)
		*!*						If Adir(laDummy,m.lcSkeleton,'',1) > 0
		*!*							Insert Into curFixMany (Filename, Filepath, DT, Filesize, Ronly, Checked, Ext) Values (;
		*!*							Juststem(curMRU.cFullItem), ;
		*!*							Justpath(curMRU.cFullItem), ;
		*!*							Ctot(Dtoc(m.laDummy(1, 3)) + [ ] + m.laDummy(1, 4)), ;
		*!*							m.laDummy(1, 2),;
		*!*							'R'$m.laDummy(1,5),;
		*!*							Iif('R'$m.laDummy(1,5),Null,.F.),;
		*!*							Justext(curMRU.cFullItem))
		*!*						Endif
		*!*					Endscan
		*!*				Endif	&&If Reccount() > 0
		*!*			Endif		&&If ThisForm.cboSource.displayValue = "MRU"
			Case ThisForm.lgetfileordir And m.lcSourcetype = [Directory]
				Select curFixMany
				This.ZapMe()
				If Adir(laDummy, ThisForm.cdirectory + [*.] + ThisForm.cfiletype) > 0
		
					For m.lnX = 1 To Alen(m.laDummy, 1)
						Insert Into curFixMany (Filename, Filepath, DT, Filesize, Ronly, Checked, Ext);
						Values (;
						Juststem(m.laDummy(m.lnX, 1)), ;
						Justpath(ThisForm.cdirectory), ;
						Ctot(Dtoc(m.laDummy(m.lnX, 3)) + [ ] + m.laDummy(m.lnX, 4)), ;
						m.laDummy(m.lnX, 2),;
						'R'$m.laDummy(m.lnX,5),;
						Iif('R'$m.laDummy(m.lnX,5),Null,.F.),;
						Justext(m.laDummy(m.lnX,1)))
					Endfor
					Go Top In curFixMany
				Endif
			Case m.lcSourcetype = [Filename]
				Select curFixMany
				This.ZapMe()
				Adir(laDummy, ThisForm.cfilename)
				Insert Into curFixMany (Filename, Filepath, DT, Filesize, Ronly, Checked, Ext);
				Values (;
				Juststem(ThisForm.cfilename ), ;
				Justpath(ThisForm.cfilename ), ;
				Ctot(Dtoc(m.laDummy(1, 3)) + [ ] + m.laDummy(1, 4)), ;
				m.laDummy(1, 2),;
				'R'$m.laDummy(1,5),;
				Iif('R'$m.laDummy(1,5),Null,.F.),;
				Justext(ThisForm.cfilename))
		Endcase
		******************************************************************
		* Changement by : KP - 06 March 2012/03:30:21
		* Reason .......: information to user
		******************************************************************
		
		Select curFixMany
		If Reccount() = 0
			Messagebox( "No files found with this selection.", 0+64+0, "Error", 0 )  &&  OK = 1
		Else
			ThisForm.grdcurFixMany.Refresh()
		Endif
		*!*   ThisForm.cboFilelist.Requery()
		*!*   ThisForm.cboFilelist.Refresh()
		*!*   ThisForm.cboFilelist.SetFocus()
		*!*   Keyboard [{alt+dnarrow}] Plain
		 
	ENDPROC

	PROCEDURE createlistfromproject
		Local laDummy[1], ;
		   lcFilename As String, ;
		   lcPath As String, ;
		   lnX As Number
		Local laFiles[1]
		lcPath = Addbs(curFixMany.filepath)
		lcFilename = Fullpath(Trim(curFixMany.filename)+'.'+curFixMany.ext, lcPath)
		Select Name, Key, comments From  (lcFilename) Where Inlist(Type, [V], [K], [P]) Into Array laFiles
		If _Tally > 0
		   Select curFixMany
		   This.ZapMe()
		   For lnX = 1 To Alen(laFiles, 1)
		      lcFilename = Fullpath(Mline(laFiles(lnX, 1), 1), lcPath)
		      If Adir(laDummy, lcFilename)=1
		         Insert Into curFixMany (filename, filepath, dt, filesize, ronly, checked, ext);
		            Values (;
		            Juststem(laDummy(1, 1)), ;
		            Justpath(lcFilename), ;
		            Ctot(Dtoc(laDummy(1, 3)) + [ ] + laDummy(1, 4)), ;
		            laDummy(1, 2),;
		            'R'$laDummy(1,5),;
		            Iif('R'$laDummy(1,5),null,.f.),;
		            Justext(laDummy(1,1)))
		      Endif
		   Endfor
		   Go Top In curFixMany
		   ThisForm.grdcurFixMany.Refresh()
		Endif
		
		
	ENDPROC

	PROCEDURE Destroy
		ThisForm.oSettings.Save(ThisForm)
		ThisForm.oSettings = .Null.
		
	ENDPROC

	PROCEDURE getbackcolor
	ENDPROC

	PROCEDURE GotFocus
		******************************************************************
		* Changement by : KP - 07 March 2012/01:59:52
		* Reason .......: moved cboFiletype to init of cbo -
		*                 disabled clear all / release all since form could
		*                 be in use
		****************************************************************** 
		*ThisForm.cboFiletype.ListIndex = 1
		*Clear all
		*Release all
		ThisForm.grdcurFixMany.Refresh()
	ENDPROC

	PROCEDURE gotoreccord
		* GoToReccord
		Parameters tnReccord
		If VARTYPE( m.tnReccord )<>'N'
			Return .F.
		Endif
		Goto m.tnReccord In curFixMany
		Return
		
	ENDPROC

	PROCEDURE Init
		#Define ccSettingsFileName  [BeautifyMany_Settings]
		
		ThisForm.RestoreSettings (ccSettingsFileName)
		
	ENDPROC

	PROCEDURE Load
		 *******************************************************************
		* Modified by KP 19-6-2012 10:54:55
		* Reason added a legenda cursor to explain the colored gridlines
		*******************************************************************
		Create cursor curLegenda ( nResult i , rOnly L , Checked L , cContent c(20) )
		
		Insert Into curLegenda VALUES ( 1, .F. , .F. ,"No code changed")
		Insert Into curLegenda VALUES ( 2, .F. , .F. , "Successfull conversion")
		Insert Into curLegenda VALUES ( 4, .F. , .F. , "Failed conversion")
		Insert Into curLegenda VALUES ( 8, .F. , .F. , "Could not write new code!")
		Insert Into curLegenda VALUES ( 0, .T. , .F. , "Read only")
		Insert Into curLegenda VALUES ( 0, .F. , .T. , "checked")
		Insert Into curLegenda VALUES ( 0, .F. , .F. , "other")
		
		
		Create Cursor curFixMany;
		(Checked L Null;
		, filename c(60);
		, filepath c(150);
		, dt T;
		, filesize i;
		, jfilename c(60);
		, ext c(60);
		, rOnly L;
		, processed L;
		, nResult N(1);
		, cResult c(50);
		, skipped L)
		* KP 2012/02/27 00:52:09 (CET)
		*Index on filepath Tag filepath
		Index On Left(filepath,95) Tag filepath
		Index On dt Tag dt
		Index On Upper(ext + filename) Tag ext
		Index On filesize Tag filesize
		Index On Checked Tag Checked
		Index On cResult Tag cResult
		Index On filename Tag filename
		This.oTools = Execscript(_Screen.cThorDispatcher, "Class= tools from pemeditor")
		
	ENDPROC

	PROCEDURE logerror
		Lparameters tnError, tcMessage
		ThisForm.nerror = tnError
		Replace nResult With tnError, ;
		   cResult With tcMessage;
		   In curFixMany
		Return .T.
	ENDPROC

	PROCEDURE pick
		If Val(ThisForm.cbosource.value)=2 && Directory
		   ThisForm.pickdir()
		Else 
		   ThisForm.pickfile()
		Endif
		
	ENDPROC

	PROCEDURE pickbackupdir
		ThisForm.cbackupdir = Getdir(Fullpath(Curdir()),'Pick a file for backup!','FixMany backup',64)
		ThisForm.txtBackup.Refresh()
		ThisForm.grdcurFixMany.SetFocus()
	ENDPROC

	PROCEDURE pickdir
		
		ThisForm.lgetfileordir = .T.
		ThisForm.lproject = .F.
		ThisForm.Refresh()
		ThisForm.cDirectory = Getdir([], [Pick a directory])
		If !Empty(ThisForm.cDirectory )
			ThisForm.createfilelist([Directory])
		Endif
		
	ENDPROC

	PROCEDURE pickfile
		ThisForm.lgetfileordir = .T.
		ThisForm.lproject = .F.
		ThisForm.Refresh()
		ThisForm.cfilename = Getfile(ThisForm.cfiletype, [Pick a file])
		If !Empty(ThisForm.cfilename)
		   ThisForm.createfilelist([Filename])
		Endif
		
	ENDPROC

	PROCEDURE processdata
		Lparameters tcOriginaldata
		Local lcReturn As String
		
		lcReturn = tcOriginaldata
		* KP 2012/02/27 01:00:44 (CET)
		* local loTools undefined
		  loTools = Execscript (_Screen.cThorDispatcher, [Class= tools from pemeditor])
		If This.lAddLocals
			lcReturn = loTools.CreateLocals (lcReturn)
		Endif
		
		Do Case
			Case This.nMDots = 1
		
			Case This.nMDots = 2
				lcReturn = Execscript (_Screen.cThorDispatcher, 'Thor_Proc_AddMDotsMultipleProcs', lcReturn)
			Case This.nMDots = 3
				Messagebox ('not yet available')
		*******************************************************************
		* Modified by KP 11-6-2012 20:37:35
		* Reason inserted a return .f.
		*******************************************************************
		
				RETURN .F.
				* 	lcReturn = Execscript (_Screen.cThorDispatcher, 'Thor_Proc_RemoveMDots', lcReturn)
			Otherwise
		
		Endcase
		
		If This.lBeautifyX
			lcReturn = loTools.BeautifyCode (lcReturn)
		Endif
		
		Return lcReturn
	ENDPROC

	PROCEDURE processfile
		#Define crlf 		Chr(13)+Chr(10)
		
		Local lcBackupFile As String, ;
			lcMasterFile As String, ;
			lcOriginaldata As String, ;
			lcProcessedData As String, ;
			lcSelect As String, ;
			lnRecord As Number, ;
			lcCurdir As String, ;
			lcMessagetext As String
		Local aList[1]
		
		If Empty(Thisform.cBackupdir)
			m.lcCurdir = Fullpath(Curdir())
			Cd Alltrim(curFixMany.FilePath)
			= Adir(aList,'*.*' ,'D')
			If Ascan(m.aList,[Backup]) > 0
				m.lcMessagetext = 'use'
			Else
				m.lcMessagetext = [create]
			Endif
		
			If Messagebox( [No backup directory specified!]  + crlf + [Do you want to ]+ m.lcMessagetext + crlf + ;
					ADDBS(curFixMany.FilePath)+ [Backup], 4+32+256,  [Please confirm] ) = 6
				*		**********************************
				*		* Modified by KP 7-6-2012 1:05:34
				*		* Reason  backup directory
				*		**********************************
				If Ascan(m.aList,[Backup]) = 0
					*******************************************************************
					* Modified by MK 25-2-2013 17:07:02
					* Reason: to avoid error on an already existing directory
					*******************************************************************
					If Ascan(m.aList, [Backup]) = 0
						Try
							Md [Backup]
						Catch
						Endtry
					Endif
		
				Endif
				Thisform.cBackupdir = Addbs(curFixMany.FilePath)+ [Backup]
				Thisform.txtBackup.Refresh()
			Else
				Return .F.
			Endif
		Endif
		Cd (m.lcCurdir)
		m.lcSelect = Select()
		m.lnRecord = Recno([curFixMany])
		
		Select curFixMany
		*******************************************************************
		* Modified by KP 4-6-2012 14:30:35
		* Reason check if pjx is selected
		*******************************************************************
		Thisform.cmdrun.SetFocus
		Scan For checked
		
			m.lcMasterFile = (Addbs(curFixMany.FilePath) + Forceext(curFixMany.filename, curFixMany.ext))
			If Empty(Thisform.cBackupdir)
				m.lcBackupFile = []
			Else
				******************************************************************
				* Changement by : KP - 01 March 2012/23:30:17
				* Reason .......: typo
				******************************************************************
				*lcBackupFile = Forcepath(lcMasterDile, ThisForm.cbackupdir)
				m.lcBackupFile = Forcepath(m.lcMasterFile, Thisform.cBackupdir)
			Endif
			If Lower(curFixMany.ext) = [prg]
				m.lcOriginaldata = Filetostr(m.lcMasterFile)
				m.lcProcessedData = Thisform.processdata(m.lcOriginaldata)
				If m.lcProcessedData = m.lcOriginaldata
					*			*****************************************************************
					* 			* Changement by : KP - 06 March 2012/02:20:57
					* 			* Reason .......: 1 = nocode changed
					*			* 	              2 = succesfully changed
					*                			  4 = failed
					*                 	    	  8 = could not write new code
					*			*****************************************************************
		
					Thisform.Logerror(1, [No code changed.])
				Else
					If !Empty(m.lcBackupFile)
						Try
							Copy File (m.lcMasterFile) To (m.lcBackupFile)
						Catch
							Thisform.Logerror(4, [Backup failed!])
						Endtry
					Endif
					If Thisform.nerror = 0
						If Strtofile(m.lcProcessedData, m.lcMasterFile) = 0
							Thisform.Logerror(8, [Could not write new code!])
						Else
							If Thisform.lerasefxp
								Erase (Forceext(m.lcMasterFile, [fxp]))
							Endif
							Thisform.Logerror(2, [Successful conversion.])
						Endif		&&Strtofile(lcProcessedData, lcMasterFile) = 0
					Endif		&&ThisForm.nerror = 0
				Endif		&&If lcProcessedData = lcOriginaldata
			Else		&&If Lower(curFixMany.ext) = [prg]
				If !Empty(m.lcBackupFile)
					Try
						Copy File (m.lcMasterFile) To (m.lcBackupFile)
					Catch
						Thisform.Logerror(4, [Backup failed!])
					Endtry
				Endif
				Select 0
				*		**********************************************************************
				* 		* Modified by KP 4-6-2012 22:25:31
				* 		* Reason added 'again' to avoid 'file in use' maybe would be better to
				* 		* open lcMasterfile always under an other alias
				*		**********************************************************************
				Use (m.lcMasterFile) Again
		
				Scan For !Empty(methods) And !Deleted()
		
					If m.lcProcessedData = m.lcOriginaldata
						Thisform.Logerror(1, [No code changed.])
					Else
						Try
							******************************************************************
							** Changement by : KP - 08 March 2012/23:11:02
							** Reason .......: no table specified in replace instruction
							******************************************************************
							Replace methods With m.lcProcessedData In Justfname(m.lcMasterFile)
							Thisform.Logerror(2, [Successful conversion.])
						Catch
							Thisform.Logerror(8, [Could not write new code!])
						Endtry
					Endif
				Endscan
				Use
				If Lower(curFixMany.ext) = [vcx]
					Try
						Compile Classlib (m.lcMasterFile)
					Catch
						Messagebox("Could not compile "+m.lcMasterFile+" please close file")
					Endtry
				Else
					Compile Form (m.lcMasterFile)
				ENDIF   &&  !Empty(m.lcBackupFile)
				Select curFixMany
			Endif		&&Lower(curFixMany.ext) = [prg]
			Thisform.grdcurFixMany.Refresh()
			*******************************************************************
			* Modified by KP 27-2-2013 16:34:46
			* Reason handbrake
			*******************************************************************
			DoEvents
			If This.Runningmode = .F.
				Messagebox( "Operation is stopped by user", 0+48+0, "Stopped", 0 )  &&  OK = 1
				Exit
			Endif
		Endscan		&&curFixMany For checked
		This.Runningmode = .F.
		This.setcaption()
		
	ENDPROC

	PROCEDURE restoresettings
		Lparameters tcSettingsFileName
		
		loSettings = Execscript (_Screen.cThorDispatcher, [class= ThorFormSettings], tcSettingsFileName)
		ThisForm.AddProperty ([oSettings], loSettings)
		loSettings.Restore (ThisForm) && Restores .Top, .Left, .Height, .Width
		loSettings.Restore (ThisForm, [lBeautifyX, lAddLocals, nMDots])
		
	ENDPROC

	PROCEDURE reversecheck
		Local lnRecord As Number
		lnRecord = Recno([curFixMany])
		Update curFixMany Set checked = !checked  Where .T.
		ThisForm.countchecked()
		*******************************************************************
		* Modified by MK 25-2-2013 17:21:44
		* Reason to avoid error on reccount()=0
		*******************************************************************
		ThisForm.GotoRecord( m.lnRecord) 
		ThisForm.grdcurFixMany.SetFocus()
	ENDPROC

	PROCEDURE setcaption		&& controls the caption of form objects
		*********************************************************
		* Modified by KP 27-2-2013 16:18:46
		* Reason To indentify which object to be used / which not
		*********************************************************
		
		Local lRunning
		lRunning = Thisform.runningmode
		Thisform.cboSource.Enabled = !m.lRunning
		Thisform.cboFiletype.Enabled = !m.lRunning
		Thisform.chkBeautify.Enabled = !m.lRunning
		Thisform.chkLocal.Enabled = !m.lRunning
		Thisform.cntMDotOptions.OptgrpMdot.Enabled = !m.lRunning
		Thisform.chkerasefxp.Enabled = !m.lRunning
		Thisform.cmdCheckall.Enabled = !m.lRunning
		Thisform.cmdSelect.Enabled = !m.lRunning
		Thisform.cmdUncheckall.Enabled = !m.lRunning
		Thisform.cmdReverse.Enabled = !m.lRunning
		Thisform.cmdRun.Enabled = !m.lRunning
		Thisform.cmdStop.Enabled = m.lRunning
		
		If Thisform.grdLegenda.Visible = .F.
			Thisform.grdLegenda.Visible = m.lRunning
		Endif
		
	ENDPROC

	PROCEDURE shiftchecked
		Local lcFilename As String, ;
		   lnRecord As Number
		
		If ThisForm.cfiletype = [pjx] And !ThisForm.lproject 
		   replace curFixMany.checked With .t.
		   lcFilename = Alltrim(curFixMany.filename)
		   If Messagebox([Do you want to see a list of files within ] + lcFilename + '?',4+32)=6
		      ThisForm.lProject=.T.
		      ThisForm.createlistfromproject 
		   Else 
		      ThisForm.lProject=.F.
		   Endif 
		Endif
		If !curFixMany.ronly
		   If curFixMany.checked
		      Replace checked With .F. In curFixMany
		   Else
		      Replace checked With .T. In curFixMany
		   Endif
		Else 
		Endif 
		ThisForm.cmdselect.Refresh()
		ThisForm.countchecked()
		ThisForm.grdcurFixMany.SetFocus()
	ENDPROC

	PROCEDURE uncheckall
		Local lnRecord As Number
		lnRecord = Recno([curFixMany])
		Update curFixMany Set checked = .F. Where .T.
		ThisForm.nchecked = 0
		*******************************************************************
		* Modified by MK 25-2-2013 17:20:06
		* Reason to avoid error if reccount()=0
		*******************************************************************
		ThisForm.gotoreccord( m.lnRecord)
		ThisForm.grdcurFixMany.SetFocus()
	ENDPROC

	PROCEDURE zapme
		Local lcSafety
		
		lcSafety = Set ('Safety')
		Set Safety Off
		Set Filter To
		Set Order To
		
		Zap
		
		Set Safety &lcSafety
		
	ENDPROC

	PROCEDURE cboFiletype.GotFocus
		ThisForm.lgetfileordir = .F.
		ThisForm.lProject = .F.
		ThisForm.Refresh()
	ENDPROC

	PROCEDURE cboFiletype.Init
		******************************************************************
		* Changement by : KP - 07 March 2012/01:57:42
		* Reason .......: moved this from Form.gotfocus ow cboBox resets 
		*                 to 1 even before selection of cboSource is done
		****************************************************************** 
		This.ListIndex = 1
	ENDPROC

	PROCEDURE cboFiletype.Valid
		Do Case
			Case ThisForm.cnsource='1'
		      ThisForm.createfilelist([Filetype])
		   Otherwise 
		      ThisForm.pick()
		Endcase
		
		
	ENDPROC

	PROCEDURE cboSource.Init
		******************************************************************
		* Changement by : KP - 07 March 2012/02:10:01
		* Reason .......:
		****************************************************************** 
		This.ListIndex = 1
	ENDPROC

	PROCEDURE cboSource.Valid
		LOCAL lcDisplayValue
		
		lcDisplayValue = This.DisplayValue
		If this.value='1'
		   *ThisForm.createfilelist()
		   * Changement by : KP - 22 Febr 2013/23:11:00
		   * Reason as per bug found by JN 
		   ThisForm.createfilelist(m.lcDisplayValue)
		Else 
		   ThisForm.pick()
		Endif        
	ENDPROC

	PROCEDURE chkBeautify.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE chkBeautify.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE chkerasefxp.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE chkerasefxp.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE chkLocal.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE chkLocal.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE chkLocal.Valid
		Local lnAnswer As Integer
		If This.Value = .T.
			lnAnswer=Messagebox( "The tool AddLocals can have significant and unforseeable effects." + ;
				"Do you first want to read the usage of mDot to apply on multiple objects?", 3+16+0, "Warning", 0 )
		Endif
		Do Case
			Case m.lnAnswer = 6  &&Yes
			ThisForm.Pageframe.Page2.Activate
			Case m.lnAnswer = 7  &&No
			Case m.lnAnswer = 2  &&Cancel
				This.Value = 0
		
		Endcase
		
	ENDPROC

	PROCEDURE cmdbackup.Click
		ThisForm.pickbackupdir()
	ENDPROC

	PROCEDURE cmdCheckall.Click
		ThisForm.checkall()
	ENDPROC

	PROCEDURE cmdReverse.Click
		ThisForm.reversecheck()
	ENDPROC

	PROCEDURE cmdRun.Click
		***********************************************************************
		* Modified by KP 27-2-2013 16:13:50
		* Reason to make it clearer which objects to be called/not to be called
		***********************************************************************
		
		ThisForm.Runningmode = !ThisForm.runningmode
		ThisForm.Setcaption ()
		ThisForm.processfile()
		
	ENDPROC

	PROCEDURE cmdRun.Refresh
		*!*	this.Enabled=ThisForm.nChecked>0
	ENDPROC

	PROCEDURE cmdSelect.Click
		ThisForm.shiftchecked()
		ThisForm.countchecked()
		ThisForm.grdcurFixMany.SetFocus()
	ENDPROC

	PROCEDURE cmdSelect.Refresh
		If !curFixMany.checked
		   this.Caption = '\<Select'
		Else
		   this.Caption = 'Un\<select'
		Endif
		
	ENDPROC

	PROCEDURE cmdStop.Click
		*******************************************************************
		* Modified by KP 28-2-2013 17:02:39
		* Reason Handbrake
		*******************************************************************
		ThisForm.RunningMode = .F.
	ENDPROC

	PROCEDURE cmdUncheckall.Click
		ThisForm.uncheckall()
	ENDPROC

	PROCEDURE grdCurfixmany.AfterRowColChange
		LPARAMETERS nColIndex
		ThisForm.cmdselect.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.Click
		ThisForm.shiftchecked()
		ThisForm.countchecked()
	ENDPROC

	PROCEDURE grdCurfixmany.Column1.Check1.Click
		Dodefault()
	ENDPROC

	PROCEDURE grdCurfixmany.Column1.Header1.Click
		If !'DESCENDING'$Set("Order") And Getwordnum(Set("Order"),2) = 'CHECKED'
		   Set Order To checked Descending 
		Else 
		   Set Order To checked
		Endif    
		Go top
		this.Parent.Parent.Parent.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.Column2.Header1.Click
		If !'DESCENDING'$Set("Order") And Getwordnum(Set("Order"),2) = 'FILENAME'
		   Set Order To filename Descending 
		Else 
		   Set Order To filename 
		Endif   
		Go top 
		this.Parent.Parent.Parent.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.Column3.Header1.Click
		If !'DESCENDING'$Set("Order") And Getwordnum(Set("Order"),2) = 'FILEPATH'
		   Set Order To filepath Descending 
		Else 
		   Set Order To filepath 
		Endif    
		Go top
		this.Parent.Parent.Parent.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.Column4.Header1.Click
		If !'DESCENDING'$Set("Order") And Getwordnum(Set("Order"),2) = 'DT'
		   Set Order To dt Descending 
		Else 
		   Set Order To dt
		Endif    
		Go top
		this.Parent.Parent.Parent.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.Column5.Header1.Click
		If !'DESCENDING'$Set("Order") And Getwordnum(Set("Order"),2) = 'FILESIZE'
		   Set Order To filesize Descending 
		Else 
		   Set Order To filesize 
		Endif    
		Go top
		this.Parent.Parent.Parent.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.grcExt.Header1.Click
		If !'DESCENDING'$Set("Order") And Getwordnum(Set("Order"),2) = 'EXT'
		   Set Order To ext Descending 
		Else 
		   Set Order To ext
		Endif   
		Go top 
		this.Parent.Parent.Parent.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.Init
		this.Refresh()
	ENDPROC

	PROCEDURE grdCurfixmany.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		Local lcKey As String
		If nKeyCode>0
		   lcKey = Upper(Chr(nKeyCode))
		Else 
		   lcKey=''
		Endif       
		Do Case
		   Case Inlist(nKeyCode, 13) && Esc, Enter
		      ThisForm.Release()
		   Case nKeyCode = 32 && Space
		      ThisForm.shiftchecked()
		   Case Inlist(nKeyCode, 19, 4)
		      Nodefault
		*!*      Case nShiftAltCtrl = 0
		*!*         Do Case
		*!*            Case lcKey = [A]
		*!*               ThisForm.cmdselectall.Click()
		*!*            Case lcKey = [D]
		*!*               ThisForm.chkfrom.Value = !ThisForm.chkfrom.Value 
		*!*            Case lcKey = [E]
		*!*               ThisForm.chkselect.Value=!ThisForm.chkselect.Value
		*!*            Case lcKey = [F]
		*!*               ThisForm.cmdprefix.Click()
		*!*            Case lcKey = [I]
		*!*               ThisForm.cmdcursor.click()
		*!*            Case lcKey = [M]
		*!*               ThisForm.chkComma.Value = !ThisForm.chkComma.Value
		*!*            Case lcKey = [L]
		*!*               ThisForm.opgCase.option1.Click()
		*!*               ThisForm.opgCase.Value = 1
		*!*               llMakestring = .T.
		*!*            Case lcKey = [N]
		*!*               ThisForm.chknvl.Value = !ThisForm.chknvl.Value
		*!*            Case lcKey = [O]
		*!*               ThisForm.opgCase.option3.Click()
		*!*               ThisForm.opgCase.Value = 3
		*!*               llMakestring = .T.
		*!*            Case lcKey = [P]
		*!*               ThisForm.opgCase.option2.Click()
		*!*               ThisForm.opgCase.Value = 2
		*!*               llMakestring = .T.
		*!*            Case lcKey = [R]
		*!*               ThisForm.cmdReverse.Click()
		*!*            Case lcKey = [S]
		*!*               ThisForm.cmdselect.Click()
		*!*            Case lcKey = [T]
		*!*               ThisForm.chkCast.Value = !ThisForm.chkCast.value
		*!*            Case lcKey = [U]
		*!*               ThisForm.cmddeselectall.Click()
		*!*            Case lcKey = [X]
		*!*               ThisForm.cmdfixPrefix.Click()
		*!*         Endcase
		Endcase
		
	ENDPROC

	PROCEDURE grdCurfixmany.Refresh
		*!*	this.SetAll([dynamicforecolor], [iif(curFixMany.ronly,ThisForm.nReadonlyForecolor,0)], [column])
		*!*	this.SetAll([dynamicbackcolor], [iif(curFixMany.checked,Rgb(255,255,13),Rgb(255,255,255))], [column])
		*!*	this.SetAll([dynamicbackcolor], [iif(curFixMany.nResult=1,ThisForm.nSelectedBackcolor,Rgb(255,255,255))], [column])
		*!*	*this.SetAll([dynamicbackcolor], [iif(curFixMany.checked,ThisForm.nSelectedBackcolor,Rgb(255,255,255))], [column])      
		***********************************************************************
		* Changement by : KP - 10 March 2012/23:41:24
		* Reason .......: to make a visual/colored effect on the executed files
		*********************************************************************** 
		ThisForm.grdcurFixMany.SETALL([DYNAMICBACKCOLOR], ;
		"ICASE(" + ;
		"curFixMany.nResult = 1, RGB(200,255,200), " + ;
		"curFixMany.nResult = 2, RGB(100,255,100), " + ;
		"curFixMany.nResult = 4, RGB(255,180,180), " + ;
		"curFixMany.nResult = 8, RGB(255,117,117), " + ;
		"curFixMany.rOnly, RGB(187,187,187), " + ;
		"curFixMany.checked, RGB(255,255,132), " + ;
		"RGB(255,255,255))", [COLUMN])
	ENDPROC

	PROCEDURE grdLegenda.Init
		ThisForm.grdLegenda.SetAll([DYNAMICBACKCOLOR], ;
			"ICASE(" + ;
			"curLegenda.nResult = 1, RGB(200,255,200), " + ;
			"curLegenda.nResult = 2, RGB(100,255,100), " + ;
			"curLegenda.nResult = 4, RGB(255,180,180), " + ;
			"curLegenda.nResult = 8, RGB(255,117,117), " + ;
			"curLegenda.rOnly, RGB(187,187,187), " + ;
			"curLegenda.checked, RGB(255,255,132), " + ;
			"RGB(255,255,255))", [COLUMN])
		Go Bott
		*******************************************************************
		* Modified by MK 25-2-2013 17:10:10
		* Reason  to show content
		*******************************************************************
		
		Go Top In curLegenda
		
	ENDPROC

ENDDEFINE
